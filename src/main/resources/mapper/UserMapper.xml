<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.UserMapper">
    <resultMap id="BaseResultMap" type="pojo.User" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="phone" property="phone" jdbcType="CHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="CHAR" />
        <result column="wechat" property="wechat" jdbcType="VARCHAR" />
        <result column="create_at" property="createAt" jdbcType="VARCHAR" />
        <result column="goods_num" property="goodNum" jdbcType="INTEGER" />
        <result column="power" property="power" jdbcType="INTEGER" />
        <result column="last_login" property="lastLogin" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="TINYINT" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, phone, username, password, wechat, create_at, goods_num, power, last_login, status
    </sql>

    <select id="getUserList" resultMap="BaseResultMap" parameterType="string">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user

    </select>


    <select id="getUserById" resultMap="BaseResultMap" parameterType="integer">
        SELECT
        <include refid="Base_Column_List"/>
        from user
        WHERE id=#{id,jdbcType=INTEGER}
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="integer">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        WHERE  id=#{id,jdbcType=INTEGER}
    </select>
    <update id="updateByPrimaryKey" parameterType="pojo.User">
    update user
    set phone = #{phone,jdbcType=CHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=CHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=VARCHAR},
      goods_num = #{goodNum,jdbcType=INTEGER},
      power = #{power,jdbcType=INTEGER},
      last_login = #{lastLogin,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from user
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <select id="getUserListByUser" resultMap="BaseResultMap" parameterType="string">
        SELECT * from user where 1=1
        <if test="phone !='' and phone!=null ">
            AND phone LIKE  concat('%',#{phone},'%')
        </if>
        <if test="username !='' and username!=null ">
            AND username LIKE  concat('%',#{username},'%')
        </if>
        <if test="wechat !='' and wechat!=null ">
            AND wechat LIKE  concat('%',#{wechat},'%')
        </if>
    </select>

    <update id="updateGoodsNum" parameterType="integer" >
    update user set
    goods_num = #{goodsNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="getUserByPhone" resultMap="BaseResultMap" parameterType="String" >
        select
        <include refid="Base_Column_List" />
        from user
        where phone = #{phone,jdbcType=CHAR}
    </select>

    <insert id="insert" parameterType="pojo.User" useGeneratedKeys="true" keyProperty="id">
        insert into user (id, phone, username,
        password, wechat, create_at,
        goods_num, power, last_login,
        status)
        values (#{id,jdbcType=INTEGER}, #{phone,jdbcType=CHAR}, #{username,jdbcType=VARCHAR},
        #{password,jdbcType=CHAR}, #{wechat,jdbcType=VARCHAR}, #{createAt,jdbcType=VARCHAR},
        #{goodsNum,jdbcType=INTEGER}, #{power,jdbcType=INTEGER}, #{lastLogin,jdbcType=VARCHAR},
        #{status,jdbcType=TINYINT})
    </insert>

    <select id="getUserListOrderByCreateAt" resultMap="BaseResultMap" parameterType="string">
        select <include refid="Base_Column_List" /> from user Order By create_at Desc
    </select>
</mapper>