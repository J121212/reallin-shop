<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.GoodsMapper">
    <resultMap id="BaseResultMap" type="pojo.Goods" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="catelog_id" property="catelogId" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="price" property="price" jdbcType="REAL" />
        <result column="real_price" property="realPrice" jdbcType="REAL" />
        <result column="start_time" property="startTime" jdbcType="VARCHAR" />
        <result column="end_time" property="endTime" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="polish_time" property="polishTime" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="CommentExtend" type="pojo.CommentExtend" >
        <id column="goodsId" property="id" jdbcType="INTEGER" />
        <result column="catelog_id" property="catelogId" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="price" property="price" jdbcType="REAL" />
        <result column="real_price" property="realPrice" jdbcType="REAL" />
        <result column="start_time" property="startTime" jdbcType="VARCHAR" />
        <result column="end_time" property="endTime" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="polish_time" property="polishTime" jdbcType="VARCHAR" />
        <collection property="comments" ofType="pojo.Comments">
            <id column="commentsId" property="id" jdbcType="INTEGER" />
            <result column="goods_id" property="goodsId" jdbcType="LONGVARCHAR" />
            <result column="content" property="content" jdbcType="LONGVARCHAR" />
            <result column="create_at" property="createAt" jdbcType="VARCHAR" />
            <association property="user"  javaType="pojo.User" resultMap="userMap"/>
        </collection>
    </resultMap>

    <resultMap id="userMap" type="pojo.User" >
        <result column="phone" property="phone" jdbcType="CHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="CHAR" />
        <result column="wechat" property="wechat" jdbcType="VARCHAR" />
        <result column="ucreate_at" property="createAt" jdbcType="VARCHAR" />
        <result column="goods_num" property="goodNum" jdbcType="INTEGER" />
        <result column="power" property="power" jdbcType="INTEGER" />
        <result column="last_login" property="lastLogin" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="TINYINT" />
    </resultMap>


    <resultMap id="ResultMapWithBLOBs" type="pojo.Goods" extends="BaseResultMap" >
        <result column="describle" property="describle" jdbcType="LONGVARCHAR" />
    </resultMap>





    <select id="getGoodsList" resultMap="ResultMapWithBLOBs" parameterType="string">
        SELECT * FROM goods
    </select>

    <select id="selectById" resultMap="ResultMapWithBLOBs" parameterType="integer">
        SELECT
        *
        from goods
        WHERE id=#{id,jdbcType=INTEGER}
    </select>

    <update id="updateByPrimaryKeyWithBLOBs" parameterType="pojo.Goods">
        update goods
    set catelog_id = #{catelogId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      real_price = #{realPrice,jdbcType=REAL},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      polish_time = #{polishTime,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      describle = #{describle,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
    </update>
    
    <update id="deleteByPrimaryKey" parameterType="integer">
        UPDATE goods
        <set>status=0</set>
        WHERE id=#{id,jdbcType=INTEGER}
    </update>

    <delete id="deleteByPrimaryKeys" parameterType="integer">
        DELETE FROM goods WHERE id=#{id,jdbcType=INTEGER}
    </delete>

    <select id="getPageGoodsByGoods" resultMap="ResultMapWithBLOBs">
        SELECT * FROM goods WHERE 1=1
        <if test="id!='' and id!=null">
            and id like concat('%',#{id},'%')
        </if>
        <if test="name!='' and name!=null">
            and name like concat('%',#{name},'%')
        </if>
        <if test="status != null">
            AND status like concat('%',#{status},'%')
        </if>

    </select>

    <select id="selectOrderByDate" resultMap="ResultMapWithBLOBs">
        select * from goods where status=1
        order by polish_time DESC
        limit #{limit,jdbcType=INTEGER}
    </select>


    <select id="selectByCatelogOrderByDate" resultMap="ResultMapWithBLOBs">
        select * from goods
        where catelog_id = #{catelogId,jdbcType=INTEGER} and status=1
        order by polish_time DESC
        limit #{limit,jdbcType=INTEGER}
    </select>


    <select id="searchGoods" resultMap="ResultMapWithBLOBs" parameterType="string" >
        select
        *
        from goods
        where status=1  and  (name like concat('%',#{name},'%') OR describle like concat('%',#{describle},'%'));
    </select>


    <select id="selectByStr" resultMap="ResultMapWithBLOBs">
        select * from goods where  status=1
        <if test="name != null" >
            AND ( name like concat('%',#{name},'%')
        </if>
        <if test="describle != null" >
            OR describle like concat('%',#{describle},'%'))
        </if>
        order by polish_time DESC limit #{limit,jdbcType=INTEGER}

    </select>

    <select id="selectByCatelog" resultMap="ResultMapWithBLOBs">
        select * from goods
        where catelog_id = #{catelog_id,jdbcType=INTEGER}
        <if test="name != null" >
            AND ( name like concat('%',#{name},'%')
        </if>
        <if test="describle != null" >
            OR describle like concat('%',#{describle},'%'))
        </if>
        AND status=1;
    </select>

    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
        select
        *
        from goods
        where id = #{id,jdbcType=INTEGER} and status=1;
    </select>

    <select id="selectCommentsByGoodsId"  resultMap="CommentExtend" parameterType="java.lang.Integer">
        select
        aa.id 'goodsId',
        aa.catelog_id,
        aa.user_id,
        aa.name,
        aa.price,
        aa.real_price,
        aa.start_time,
        aa.end_time,
        aa.status,
        aa.polish_time,
        dd.*
        from goods aa
        left join (
        select
        bb.id as 'commentsId',
        bb.content,
        bb.goods_id,
        bb.create_at,
        cc.id as 'userid',
        cc.phone,
        cc.username,
        cc.password,
        cc.wecaht,
        cc.create_at 'ucreate_at',
        cc.goods_num,
        cc.power,
        cc.last_login,
        cc.status
        from user cc,comments bb
        where cc.id=bb.user_id
        ) as dd on dd.goods_id = aa.id
        where aa.id=#{id}
    </select>

    <insert id="addComments">
        insert into comments(id,user_id,goods_id,content,create_at) values(#{id},#{user.id},#{goods.id},#{content},#{createAt})
    </insert>

    <insert id="insert" parameterType="pojo.Goods" useGeneratedKeys="true" keyProperty="id">
        insert into goods (id, catelog_id, user_id,
        name, price, real_price, start_time,
        end_time, polish_time,describle)
        values (#{id,jdbcType=INTEGER}, #{catelogId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
        #{name,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, #{realPrice,jdbcType=REAL}, #{startTime,jdbcType=VARCHAR},
        #{endTime,jdbcType=VARCHAR}, #{polishTime,jdbcType=VARCHAR}, #{describle,jdbcType=LONGVARCHAR}
        )
    </insert>

    <update id="updateGoodsByGoodsId" parameterType="pojo.Goods" >
        update goods
        set status = #{status,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>


    <select id="getGoodsByUserId" resultMap="ResultMapWithBLOBs">
        select * from goods where user_id = #{user_id,jdbcType=INTEGER} and status=1;
    </select>



    </mapper>